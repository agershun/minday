// Generated by CoffeeScript 1.3.3
var presentationToggle, statePresentation;

keyp[PRESENTATION] = {};

keyp[SLIDE] = {};

keyp[SLIDE][KEY_SPACE] = function() {
  return sidea.right();
};

statePresentation = false;

presentationToggle = function(flag) {
  if (flag == null) {
    flag = true;
  }
  return statePresentation = flag;
};

keyp[PRESENTATION][ALT + KEY_F5] = function() {
  if (this[0].kind === SLIDE) {
    statePresentation = true;
    return this[0].fhtml();
  }
};

keyp[SLIDE][ALT + KEY_F5] = function() {
  statePresentation = true;
  return this.fhtml();
};

right[SLIDE] = function() {
  var ria, sia;
  if (sidea === fidea) {
    sia = sidea;
    if (sidea.pa[sidea.ix + 1] != null) {
      sia = sidea.pa[sidea.ix + 1];
    }
    sia.fhtml(sia);
    return sia;
  } else {
    ria = this.downnext();
    if (ria === null) {
      return this;
    } else {
      return ria;
    }
  }
};

left[SLIDE] = function() {
  var ret, sia;
  if (sidea === fidea) {
    sia = sidea;
    console.log(sidea.ix - 1);
    if (sidea.pa[sidea.ix - 1] != null) {
      sia = sidea.pa[sidea.ix - 1];
    }
    sia.fhtml(sia);
    return sia;
  } else {
    if (this.ix > 0) {
      ret = this.pa[this.ix - 1].uplast();
      if (ret.kind === CELL) {
        return ret.pa[0];
      }
      return ret;
    } else {
      return this.pa;
    }
  }
};

down[SLIDE] = right[SLIDE];

pgdn[SLIDE] = right[SLIDE];

up[SLIDE] = left[SLIDE];

pgup[SLIDE] = left[SLIDE];

space[SLIDE] = right[SLIDE];

backspace[SLIDE] = left[SLIDE];

home[SLIDE] = function() {
  return sidea.pa[0].upperFrame().fhtml(sidea.pa[0]);
};

end[SLIDE] = function() {
  return sidea.pa[sidea.pa.pa.length - 1].upperFrame().fhtml(sidea.pa[sidea.pa.pa.length - 1]);
};

esc[SLIDE] = function() {
  return sidea.pa.upperFrame().fhtml(sidea);
};
