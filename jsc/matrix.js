// Generated by CoffeeScript 1.3.3

Idea.prototype.kindMatrix = function() {
  var ca, i, j, ra, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results;
  this.kind = MATRIX;
  if (this.corner != null) {
    this.corner.kind = CORNER;
    this.corner.pa = this;
    this.corner.ix = 0;
  }
  if (this.row != null) {
    this.row.kind = ROWS;
    this.row.pa = this;
    this.row.ix = 'row';
    _ref = this.row;
    for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
      ra = _ref[i];
      ra.kind = ROW;
      ra.pa = this.row;
      ra.ix = i;
    }
  }
  if (this.column != null) {
    this.column.kind = COLUMNS;
    this.column.pa = this;
    this.column.ix = 'column';
    _ref1 = this.column;
    for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {
      ca = _ref1[i];
      ca.kind = COLUMN;
      ca.pa = this.column;
      ca.ix = i;
    }
  }
  _ref2 = this.data;
  _results = [];
  for (i = _k = 0, _len2 = _ref2.length; _k < _len2; i = ++_k) {
    ra = _ref2[i];
    ra.kind = ROWCELL;
    ra.pa = this;
    ra.ix = i;
    _results.push((function() {
      var _l, _len3, _results1;
      _results1 = [];
      for (j = _l = 0, _len3 = ra.length; _l < _len3; j = ++_l) {
        ca = ra[j];
        ca.kind = CELL;
        ca.pa = ra;
        _results1.push(ca.ix = j);
      }
      return _results1;
    })());
  }
  return _results;
};

draw[MATRIX] = function(level) {
  var ca, ra, ri, s, _i, _j, _k, _len, _len1, _len2, _ref, _ref1;
  s = this.startIdeaTxt(level);
  if ((level === 0) || (level > 0 && !(this.frame != null))) {
    s += "<table id='bag" + this.id + "' class='normaltable'>";
    if (this.column != null) {
      s += "<thead>";
      if (this.row) {
        if (this.corner) {
          s += "<th id='tbl" + this.corner.id + "'>";
          s += this.corner.draw(level + 1);
          s += "</th>";
        } else {
          s += "<th>";
          s += "</th>";
        }
      }
      _ref = this.column;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        ca = _ref[_i];
        s += "<th id='tbl" + ca.id + "'>";
        s += ca.draw(level + 1);
        s += "</th>";
      }
      s += "</thead>";
    }
    _ref1 = this.data;
    for (ri = _j = 0, _len1 = _ref1.length; _j < _len1; ri = ++_j) {
      ra = _ref1[ri];
      s += "<tr>";
      if (this.row != null) {
        s += "<th id='tbl" + this.row[ri].id + "'>";
        s += this.row[ri].draw(level + 1);
        s += "</th>";
      }
      for (_k = 0, _len2 = ra.length; _k < _len2; _k++) {
        ca = ra[_k];
        s += "<td id='tbl" + ca.id + "'>";
        s += ca.draw(level + 1);
        s += "</td>";
      }
      s += "</tr>";
    }
    s += "</table>";
  }
  s += "</div>";
  return s;
};

down[MATRIX] = function() {
  var ria, _ref;
  if (((_ref = sidea[0]) != null ? _ref[0] : void 0) != null) {
    return sidea[0][0];
  } else {
    ria = sidea.downnext();
    if (ria === null) {
      return sidea;
    } else {
      return ria;
    }
  }
  return sidea;
};

right[MATRIX] = function() {
  return down[MATRIX].call(this);
};

down[CELL] = function() {
  var ria, _ref;
  if (((!sidea.frame) || (sidea === fidea)) && (sidea[0] != null)) {
    return sidea[0];
  } else if (((_ref = sidea.pa.pa[sidea.pa.ix + 1]) != null ? _ref[sidea.ix] : void 0) != null) {
    return sidea.pa.pa[sidea.pa.ix + 1][sidea.ix];
  } else {
    ria = sidea.pa.pa.downnext();
    if (ria === null) {
      return sidea;
    } else {
      return ria;
    }
  }
};

up[CELL] = function() {
  var _ref, _ref1;
  if (((_ref = sidea.pa.pa[sidea.pa.ix - 1]) != null ? _ref[sidea.ix] : void 0) != null) {
    return sidea.pa.pa[sidea.pa.ix - 1][sidea.ix];
  } else if (((_ref1 = sidea.pa.pa.column) != null ? _ref1[sidea.ix] : void 0) != null) {
    return sidea.pa.pa.column[sidea.ix];
  } else {
    return sidea.pa.pa;
  }
};

left[CELL] = function() {
  var _ref, _ref1;
  if (sidea.pa.pa[sidea.pa.ix][sidea.ix - 1] != null) {
    return sidea.pa.pa[sidea.pa.ix][sidea.ix - 1];
  } else if (((_ref = sidea.pa.pa[sidea.pa.ix - 1]) != null ? _ref[sidea.pa.length - 1] : void 0) != null) {
    return sidea.pa.pa[sidea.pa.ix - 1][sidea.pa.length - 1];
  } else if (((_ref1 = sidea.pa.pa.row) != null ? _ref1[sidea.pa.ix] : void 0) != null) {
    return sidea.pa.pa.row[sidea.pa.ix];
  } else {
    return sidea.pa.pa;
  }
};

right[CELL] = function() {
  var ria, _ref, _ref1;
  if (sidea.pa.pa[sidea.pa.ix][sidea.ix + 1] != null) {
    return sidea.pa.pa[sidea.pa.ix][sidea.ix + 1];
  } else if (((_ref = sidea.pa.pa.row) != null ? _ref[sidea.pa.ix + 1] : void 0) != null) {
    return sidea.pa.pa.row[sidea.pa.ix + 1];
  } else if (((_ref1 = sidea.pa.pa[sidea.pa.ix + 1]) != null ? _ref1[0] : void 0) != null) {
    return sidea.pa.pa[sidea.pa.ix + 1][0];
  } else {
    ria = sidea.pa.pa.downnext();
    if (ria === null) {
      return sidea;
    } else {
      return ria;
    }
  }
};

down[COLUMN] = function() {
  var ria, _ref;
  if (((!sidea.frame) || (sidea === fidea)) && (sidea[0] != null)) {
    return sidea[0];
  } else if (((_ref = sidea.pa.pa[0]) != null ? _ref[sidea.ix] : void 0) != null) {
    return sidea.pa.pa[0][sidea.ix];
  } else {
    ria = sidea.pa.pa.downnext();
    if (ria === null) {
      return sidea;
    } else {
      return ria;
    }
  }
};

up[COLUMN] = function() {
  return sidea.pa.pa;
};

left[COLUMN] = function() {
  if (sidea.pa[sidea.ix - 1] != null) {
    return sidea.pa[sidea.ix - 1];
  } else if (sidea.pa.pa.corner != null) {
    return sidea.pa.pa.corner;
  } else {
    return sidea.pa.pa;
  }
};

right[COLUMN] = function() {
  var ria, _ref, _ref1, _ref2;
  if (sidea.pa[sidea.ix + 1] != null) {
    return sidea.pa[sidea.ix + 1];
  } else if (((_ref = sidea.pa.pa.row) != null ? _ref[0] : void 0) != null) {
    return (_ref1 = sidea.pa.pa.row) != null ? _ref1[0] : void 0;
  } else if (((_ref2 = sidea.pa.pa[0]) != null ? _ref2[0] : void 0) != null) {
    return sidea.pa.pa[0][0];
  } else {
    ria = sidea.pa.pa.downnext();
    if (ria === null) {
      return sidea;
    } else {
      return ria;
    }
  }
};

down[ROW] = function() {
  var ria;
  if (((!sidea.frame) || (sidea === fidea)) && (sidea[0] != null)) {
    return sidea[0];
  } else if (sidea.pa[sidea.ix + 1] != null) {
    return sidea.pa[sidea.ix + 1];
  } else {
    ria = sidea.pa.pa.downnext();
    if (ria === null) {
      return sidea;
    } else {
      return ria;
    }
  }
};

up[ROW] = function() {
  if (sidea.pa[sidea.ix - 1] != null) {
    return sidea.pa[sidea.ix - 1];
  } else if (sidea.pa.pa.corner != null) {
    return sidea.pa.pa.corner;
  } else {
    return sidea.pa.pa;
  }
};

left[ROW] = function() {
  var _ref, _ref1;
  if (((_ref = sidea.pa.pa[sidea.ix - 1]) != null ? _ref[sidea.pa.pa.length - 1] : void 0) != null) {
    return sidea.pa.pa[sidea.ix - 1][sidea.pa.pa.length - 1];
  } else if (((_ref1 = sidea.pa.pa.column) != null ? _ref1[sidea.pa.pa.column.length - 1] : void 0) != null) {
    return sidea.pa.pa.column[sidea.pa.pa.column.length - 1];
  } else if (sidea.pa.pa.corner != null) {
    return sidea.pa.pa.corner;
  } else {
    return sidea.pa.pa;
  }
};

right[ROW] = function() {
  var ria;
  if (sidea.pa.pa[sidea.ix][0] != null) {
    return sidea.pa.pa[sidea.ix][0];
  } else if (sidea.pa[sidea.ix + 1] != null) {
    return sidea.pa[sidea.ix + 1];
  } else {
    ria = sidea.pa.pa.downnext();
    if (ria === null) {
      return sidea;
    } else {
      return ria;
    }
  }
};

up[CORNER] = function() {
  return sidea.pa;
};

left[CORNER] = function() {
  return sidea.pa;
};

down[CORNER] = function() {
  var ria, _ref, _ref1;
  if (((!sidea.frame) || (sidea === fidea)) && (sidea[0] != null)) {
    return sidea[0];
  }
  if (((_ref = sidea.pa.row) != null ? _ref[0] : void 0) != null) {
    return ((_ref1 = sidea.pa.row) != null ? _ref1[0] : void 0) != null;
  } else {
    ria = sidea.pa.pa.downnext();
    if (ria === null) {
      return sidea;
    } else {
      return ria;
    }
  }
};

right[CORNER] = function() {
  var _ref;
  if (((_ref = sidea.pa.column) != null ? _ref[0] : void 0) != null) {
    return sidea.pa.column[0];
  }
};

enter[CELL] = function() {
  return sidea.ins();
};

tab[CELL] = function() {
  var sia;
  sidea.pa.pa.insertColumn(sidea.ix + 1);
  sia = sidea.pa[sidea.ix + 1];
  return sia.upperFrame().fhtml(sia);
};

shifttab[CELL] = function() {
  var sia;
  sidea.pa.pa.insertColumn(sidea.ix);
  sia = sidea.pa[sidea.ix - 1];
  return sia.upperFrame().fhtml(sia);
};

ctrlenter[CELL] = function() {
  var sia;
  sidea.pa.pa.insertRow(sidea.pa.ix + 1);
  sia = sidea.pa.pa[sidea.pa.ix + 1][sidea.ix];
  return sia.upperFrame().fhtml(sia);
};

shiftctrlenter[CELL] = function() {
  var sia;
  sidea.pa.pa.insertRow(sidea.pa.ix);
  sia = sidea.pa.pa[sidea.pa.ix - 1][sidea.ix];
  return sia.upperFrame().fhtml(sia);
};

del[CELL] = function() {
  var ia, _i, _len, _ref;
  sidea.txt = "";
  _ref = sidea.data;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    ia = _ref[_i];
    ia.deleteIdea();
  }
  return sidea.upperFrame().fhtml(sidea);
};

ctrldel[CELL] = function() {
  var sia, _ref, _ref1, _ref2;
  sidea.pa.pa.deleteRow(sidea.pa.ix);
  if (((_ref = sidea.pa.pa[sidea.pa.ix]) != null ? _ref[sidea.ix] : void 0) != null) {
    sia = sidea.pa.pa[sidea.pa.ix][sidea.ix];
  } else if (((_ref1 = sidea.pa.pa[sidea.pa.ix - 1]) != null ? _ref1[sidea.ix] : void 0) != null) {
    sia = sidea.pa.pa[sidea.pa.ix - 1][sidea.ix];
  } else if (((_ref2 = sidea.pa.pa.column) != null ? _ref2[sidea.ix] : void 0) != null) {
    sia = sidea.pa.pa.column[sidea.ix];
  } else {
    sia = sidea.pa.pa;
  }
  return sia.upperFrame().fhtml(sia);
};

altdel[CELL] = function() {
  var sia, _ref;
  sidea.pa.pa.deleteColumn(sidea.ix);
  if (sidea.pa[sidea.ix]) {
    sia = sidea.pa[sidea.ix];
  } else if (sidea.pa[sidea.ix - 1]) {
    sia = sidea.pa[sidea.ix - 1];
  } else if (((_ref = sidea.pa.pa.row) != null ? _ref[sidea.pa.ix] : void 0) != null) {
    sia = sidea.pa.pa.row[sidea.pa.ix];
  } else {
    sia = sidea.pa.pa;
  }
  return sia.upperFrame().fhtml(sia);
};

Idea.prototype.deleteRow = function(row) {
  this.splice(row, 1);
  return this.kindMatrix();
};

Idea.prototype.deleteColumn = function(col) {
  var ri, _i, _len, _ref;
  _ref = this.data;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    ri = _ref[_i];
    ri.splice(col, 1);
  }
  return this.kindMatrix();
};

Idea.prototype.insertRow = function(row) {
  var i, ri, _i, _ref;
  if (this.row != null) {
    this.row.splice(row, 0, add(""));
  }
  ri = add("");
  for (i = _i = 0, _ref = this[0].length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
    ri.push(add(""));
  }
  this.splice(row, 0, ri);
  return this.kindMatrix();
};

Idea.prototype.insertColumn = function(col) {
  var ri, _i, _len, _ref;
  if (this.column != null) {
    this.column.splice(col, 0, add(""));
  }
  _ref = this.data;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    ri = _ref[_i];
    ri.splice(col, 0, add(""));
  }
  return this.kindMatrix();
};

Idea.prototype.addColumnHeaders = function() {
  var c, i, _i, _ref;
  if (this.column == null) {
    c = add("");
    for (i = _i = 0, _ref = this[0].length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
      c.push(add(""));
    }
    this.column = c;
    this.kindMatrix();
    return sidea.upperFrame().fhtml(sidea);
  }
};

Idea.prototype.addRowHeaders = function() {
  var i, r, _i, _ref;
  if (this.row == null) {
    r = add("");
    for (i = _i = 0, _ref = this.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
      r.push(add(""));
    }
    this.row = r;
    this.kindMatrix();
    return sidea.upperFrame().fhtml(sidea);
  }
};

navi[MATRIX] = function(eo) {
  if (eo.which === 72 && eo.ctrlKey && eo.altKey) {
    return sidea.addColumnHeaders();
  } else if (eo.which === 81 && eo.ctrlKey && eo.altKey) {
    return sidea.addRowHeaders();
  } else {
    return navi[IDEA](eo);
  }
};

navi[CELL] = function(eo) {
  if (eo.which === 72 && eo.ctrlKey && eo.altKey) {
    return sidea.pa.pa.addColumnHeaders();
  } else if (eo.which === 81 && eo.ctrlKey && eo.altKey) {
    return sidea.pa.pa.addRowHeaders();
  } else {
    return navi[IDEA](eo);
  }
};

downnext[CELL] = function() {
  var _ref, _ref1, _ref2;
  if (this === fidea) {
    return null;
  }
  if (((_ref = this.pa) != null ? (_ref1 = _ref.pa) != null ? (_ref2 = _ref1[this.pa.ix + 1]) != null ? _ref2[this.ix] : void 0 : void 0 : void 0) != null) {
    return this.pa.pa[this.pa.ix + 1][this.ix];
  } else {
    return this.pa.pa.downnext();
  }
  return this;
};

childkind[CELL] = function() {
  return IDEA;
};
