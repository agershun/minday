// Generated by CoffeeScript 1.3.3
var closeDropdownMenu, insertAfterIdea, insertAltChildIdea, insertBallon, insertBeforeIdea, insertChildIdea, insertComment, insertDescription, insertDownIdea, insertDownRow, insertGantt, insertGuide, insertIcon, insertLeftIdea, insertMatrix, insertMindmap, insertPiechart, insertPyramid, insertRightIdea, insertSticker, insertTable, insertTabs, insertTag, insertTick, insertTodo, insertTree, insertUpIdea, insertUpRow, setMenuInsert;

setMenuInsert = function() {
  $(".insert_childidea").click(insertChildIdea);
  $(".insert_altchildidea").click(insertAltChildIdea);
  $(".insert_upidea").click(insertUpIdea);
  $(".insert_downidea").click(insertDownIdea);
  $(".insert_leftidea").click(insertLeftIdea);
  $(".insert_rightidea").click(insertRightIdea);
  $(".insert_beforeidea").click(insertBeforeIdea);
  $(".insert_afteridea").click(insertAfterIdea);
  $(".insert_downrow").click(insertDownRow);
  $(".insert_mindmap").click(insertMindmap);
  $(".insert_pyramid").click(insertPyramid);
  $(".insert_matrix").click(insertMatrix);
  $(".insert_tabs").click(insertTabs);
  $(".insert_tree").click(insertTree);
  $(".insert_gantt").click(insertGantt);
  $(".insert_table").click(insertTable);
  $(".insert_piechart").click(insertPiechart);
  $(".insert_todo").click(insertTodo);
  $(".insert_comment").click(insertComment);
  $(".insert_sticker").click(insertSticker);
  $(".insert_description").click(insertDescription);
  $(".insert_guide").click(insertGuide);
  $(".insert_ballon").click(insertBallon);
  $(".insert_tick").click(insertTick);
  $(".insert_icon").click(insertIcon);
  return $(".insert_tag").click(insertTag);
};

insertChildIdea = function() {
  var ck, ia;
  finishEdit();
  ck = null;
  if ((childkind[sidea.kind] != null) && (childkind[sidea.kind]() != null)) {
    ck = childkind[sidea.kind]();
  }
  if (sidea.insertkind != null) {
    ck = sidea.insertkind;
  }
  if (sidea.nochildren == null) {
    if (ck != null) {
      if ((childsd[sidea.kind] != null) && childsd[sidea.kind]() === OUTSIDE) {
        ia = sidea.ado("&nbsp;", {
          kind: ck
        });
      } else {
        ia = sidea.add("&nbsp;", {
          kind: ck
        });
      }
      return fidea.fhtml(ia);
    }
  }
};

insertAltChildIdea = function() {
  var ia;
  finishEdit();
  if (sidea.nochildren == null) {
    if (childkind[sidea.kind]() !== null) {
      if ((childsd[sidea.kind] != null) && childsd[sidea.kind]() === OUTSIDE) {
        ia = sidea.add("&nbsp;");
      } else {
        ia = sidea.add(OUTSIDE, "&nbsp;", {
          kind: childkind[sidea.kind]()
        });
      }
      return fidea.fhtml(ia);
    }
  }
};

insertUpIdea = function() {
  var ia, iaa;
  finishEdit();
  if (!((sidea.pa.nochildren != null) && sidea.sd >= 0)) {
    ia = add("&nbsp;", {
      kind: sidea.kind
    });
    iaa = [ia];
    sidea.pa.splice(sidea.sd, 0, iaa);
    sidea.pa.normalizeIdea();
    return fidea.fhtml(ia);
  }
};

insertDownIdea = function() {
  var ia, iaa;
  finishEdit();
  if (sidea.pa.nochildren == null) {
    if (sidea.sd >= 0) {
      ia = add("&nbsp;", {
        kind: sidea.kind
      });
      iaa = [ia];
      sidea.pa.splice(sidea.sd + 1, 0, iaa);
      sidea.pa.normalizeIdea();
      fidea.fhtml(ia);
      return ia;
    } else {
      return insertChildIdea();
    }
  }
  return ia;
};

insertUpRow = function() {
  var a, ia, iaa, j, _i, _len, _ref;
  finishEdit();
  if (!((sidea.pa.nochildren != null) && sidea.sd >= 0)) {
    iaa = [];
    _ref = sidea.pa[sidea.sd];
    for (j = _i = 0, _len = _ref.length; _i < _len; j = ++_i) {
      a = _ref[j];
      ia = add("&nbsp;", {
        kind: a.kind
      });
      iaa.push(ia);
    }
    sidea.pa.splice(sidea.sd, 0, iaa);
    sidea.pa.normalizeIdea();
    return fidea.fhtml(iaa[0]);
  }
};

insertDownRow = function() {
  var a, ia, iaa, j, _i, _len, _ref;
  finishEdit();
  if (!((sidea.pa.nochildren != null) && sidea.sd >= 0)) {
    iaa = [];
    _ref = sidea.pa[sidea.sd];
    for (j = _i = 0, _len = _ref.length; _i < _len; j = ++_i) {
      a = _ref[j];
      ia = add("&nbsp;", {
        kind: a.kind
      });
      iaa.push(ia);
    }
    sidea.pa.splice(sidea.sd + 1, 0, iaa);
    sidea.pa.normalizeIdea();
    fidea.fhtml(iaa[sidea.ix]);
    return iaa[sidea.ix];
  }
  return sidea;
};

insertLeftIdea = function() {
  var ia;
  finishEdit();
  if (sidea.pa.nochildren == null) {
    ia = add("&nbsp;", {
      kind: sidea.kind
    });
    ia.sd = sidea.sd;
    sidea.pa[sidea.sd].splice(sidea.ix, 0, ia);
    sidea.pa.normalizeIdea();
    return fidea.fhtml(ia);
  }
};

insertRightIdea = function() {
  var ia;
  finishEdit();
  if (sidea.pa.nochildren == null) {
    ia = add("&nbsp;", {
      kind: sidea.kind
    });
    ia.sd = sidea.sd;
    sidea.pa[sidea.sd].splice(sidea.ix + 1, 0, ia);
    sidea.pa.normalizeIdea();
    return fidea.fhtml(ia);
  }
};

insertBeforeIdea = function() {
  var ia1, ia2;
  finishEdit();
  if (sidea.nochildren == null) {
    ia1 = sidea.add("&nbsp;");
    ia2 = sidea.adr(sidea.txt);
    sidea.txt = null;
    return fidea.fhtml(ia1);
  }
};

insertAfterIdea = function() {
  var ia1, ia2;
  finishEdit();
  if (sidea.nochildren == null) {
    ia1 = sidea.add(sidea.txt);
    ia2 = sidea.adr("&nbsp;");
    sidea.txt = null;
    return fidea.fhtml(ia2);
  }
};

insertMindmap = function() {
  var mm;
  finishEdit();
  mm = sidea.add(null, {
    kind: MINDMAP
  });
  mm.add(OUTSIDE, "&nbsp;", {
    kind: MINDLEAF
  });
  return fidea.fhtml(mm);
};

insertTree = function() {
  var tr, tr0;
  finishEdit();
  tr = sidea.add(null, {
    kind: TREE
  });
  tr0 = tr.add(OUTSIDE, "&nbsp;", {
    kind: NODE
  });
  tr0.add(OUTSIDE, "&nbsp;", {
    kind: NODE
  });
  tr0.add(OUTSIDE, "&nbsp;", {
    kind: NODE
  });
  return fidea.fhtml(tr);
};

insertMatrix = function() {
  var mm;
  finishEdit();
  sidea.intype = TABLE;
  mm = sidea.add("1");
  sidea.adr("2");
  sidea.add("3");
  sidea.adr("4");
  return fidea.fhtml(mm);
};

insertTabs = function() {
  var mm;
  finishEdit();
  mm = sidea.addIdea(sidea, 0, 0, false);
  mm.txt = "Закладки";
  mm.push(add("Закладка 1", [add("Идея 1.1"), add("Идея 1.2")]));
  mm.push(add("Закладка 2", [add("Идея 2.1"), add("Идея 2.2")]));
  mm.kindTabs();
  return sidea.upperFrame().fhtml(sidea);
};

insertGantt = function() {
  var g, gp;
  finishEdit();
  g = sidea.addIdea(sidea, 0, 0, false);
  g.txt = "План проекта";
  g.start = 1;
  g.finish = 12;
  g.phase = (gp = add(""));
  gp.push(add("Фаза 1", {
    start: 1,
    finish: 5
  }));
  gp.push(add("Фаза 2", {
    start: 6,
    finish: 12
  }));
  g.push(add("Этап 1", {
    start: 1,
    finish: 6
  }));
  g.push(add("Этап 2", {
    start: 6,
    finish: 12
  }));
  g.kindGantt();
  return g.upperFrame().fhtml(g);
};

insertPyramid = function() {
  var mm;
  finishEdit();
  mm = sidea.addIdea(sidea, 0, 0, false);
  mm.txt = "Матрица";
  mm.kindPyramid();
  return mm.upperFrame().fhtml(mm[0]);
};

insertTable = function() {
  var mm;
  finishEdit();
  mm = sidea.addIdea(sidea, 0, 0, false);
  mm.kindTable();
  return mm.upperFrame().fhtml(mm[0][0]);
};

insertPiechart = function() {
  var mm;
  finishEdit();
  mm = sidea.addIdea(sidea, 0, 0, false);
  mm.kind = PIECHART;
  return mm.upperFrame().fhtml(mm[0][0]);
};

insertTodo = function() {
  return alert("Эта функция программы будет реализована в следующих версиях");
};

insertComment = function() {
  return alert("Эта функция программы будет реализована в следующих версиях");
};

insertSticker = function() {
  return alert("Эта функция программы будет реализована в следующих версиях");
};

insertDescription = function() {
  return alert("Эта функция программы будет реализована в следующих версиях");
};

insertGuide = function() {
  return alert("Эта функция программы будет реализована в следующих версиях");
};

insertBallon = function() {
  return alert("Эта функция программы будет реализована в следующих версиях");
};

insertTick = function() {
  var ia;
  finishEdit();
  ia = sidea.add({
    kind: TICK
  });
  return fidea.fhtml(ia);
};

insertIcon = function() {
  var ia;
  finishEdit();
  ia = sidea.add({
    kind: ICON
  });
  return fidea.fhtml(ia);
};

insertTag = function() {
  var ia;
  finishEdit();
  ia = sidea.add(" ", {
    kind: TAG
  });
  return fidea.fhtml(ia);
};

closeDropdownMenu = function() {
  return $('.dropdown.open .dropdown-toggle').dropdown('toggle');
};
